{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","state","console","log","type","value","onChange","target","getGifs","category","a","endpoint","fetch","response","json","data","gifs","map","id","title","images","url","downsized_medium","GifGridItem","className","src","alt","GifGrid","propCategory","loading","setState","useEffect","then","useFetchGifs","image","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAG1B,EAAoCC,mBAAS,gBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACI,sBAAMC,SAZO,SAACC,GAClBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,KAGlBO,QAAQC,IAAI,iBAIR,SACI,uBACIC,KAAK,OACLC,MAAOX,EACPY,SApBU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBZ,EAAcY,EAAOF,e,+BCVhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FACiFF,EADjF,sBAEIG,MAAMD,GAFV,cAEbE,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,YAAwB,IAAtBC,EAAqB,EAArBA,GAAGC,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,OAC9B,MAAO,CACHF,KACAC,QACAE,IAAG,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAQE,iBAAiBD,QARnB,kBAWZL,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBL,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOE,EAAS,EAATA,IAEpC,OADAnB,QAAQC,IAAIe,EAAIC,EAAOE,GAEnB,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAErB,ECJwB,SAACnB,GAEzB,MAA0BhB,mBAAS,CAC/BsB,KAAO,GACPc,SAAS,IAFb,mBAAO5B,EAAP,KAAc6B,EAAd,KAeA,OAVAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAZ,GACFU,EAAS,CACLf,KAAOK,EACPS,SAAS,SAGtB,IAEI5B,EDbwBgC,CAAaL,GAAhCR,EAAZ,EAAOL,KAAac,EAApB,EAAoBA,QAEpB,OACI,sBAAKL,UAAU,YAAf,UACI,6BAAKI,IAGDC,GAAW,2CAEf,6BAEQT,EAAOH,KAAI,SAACiB,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAMhB,aESxBiB,EAzBM,SAAAC,GAEjB,IACA,EAAoC3C,mBADf,CAAC,WACtB,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWpB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEImB,aAAcnB,GADTA,Y,MCdjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c3297ba3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('Search a gif');\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setInputValue(target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(state => [inputValue, ...state]);\r\n            setInputValue('')\r\n        }\r\n\r\n        console.log('Submit done!');\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n","export const getGifs = async (category) => {\r\n    const endpoint = `https://api.giphy.com/v1/gifs/search?api_key=eS56VPwbQ39i8WQ1whMG1collvLwB7W0&q=${category}&limit=10`;\r\n    const response = await fetch(endpoint);\r\n    const {data} = await response.json();\r\n    const gifs = data.map( ({id,title,images}) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({propCategory}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(propCategory);\r\n    \r\n    return (\r\n        <div className=\"card-grid\">\r\n            <h3>{propCategory}</h3>\r\n\r\n            {\r\n                loading && <p>Loading...</p>\r\n            }\r\n            <ol>\r\n                { \r\n                    images.map((image) => (\r\n                        <GifGridItem \r\n                            key={image.id}\r\n                            {...image}\r\n                        />\r\n                    ))\r\n                \r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(images => {\r\n                setState({\r\n                    data : images,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    let categoriesList = ['Naruto'];\r\n    const [categories, setCategories] = useState(categoriesList)\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            propCategory={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}